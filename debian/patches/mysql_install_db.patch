--- a/scripts/mysql_install_db.pl.in
+++ b/scripts/mysql_install_db.pl.in
@@ -430,33 +430,41 @@
 
 $config_file= "$basedir/my.cnf";
 
+my $failed_write_cfg= 0;
 my $cfg_template= find_in_basedir($opt,"file","my-default.cnf",
 				  "share","share/mysql","support-files");
--e $cfg_template or cannot_find_file("my-default.cnf");
 
-$copy_cfg_file= $config_file;
-my $failed_write_cfg= 0;
-if (-e $copy_cfg_file)
+if (-e $cfg_template)
 {
-  $copy_cfg_file =~ s/my.cnf/my-new.cnf/;
-  # Too early to print warning here, the user may not notice
-}
-open (TEMPL, $cfg_template) or error($opt, "Could not open config template $cfg_template");
-if (open (CFG, "> $copy_cfg_file"))
-{
-  while (<TEMPL>)
-  {
-    # Remove lines beginning with # *** which are template comments
-    print CFG $_ unless /^# \*\*\*/;
-  }
-  close CFG;
+# or cannot_find_file("my-default.cnf");
+
+    $copy_cfg_file= $config_file;
+    if (-e $copy_cfg_file)
+    {
+      $copy_cfg_file =~ s/my.cnf/my-new.cnf/;
+      # Too early to print warning here, the user may not notice
+    }
+    open (TEMPL, $cfg_template) or error($opt, "Could not open config template $cfg_template");
+    if (open (CFG, "> $copy_cfg_file"))
+    {
+      while (<TEMPL>)
+      {
+        # Remove lines beginning with # *** which are template comments
+        print CFG $_ unless /^# \*\*\*/;
+      }
+      close CFG;
+    }
+    else
+    {
+      warning($opt,"Could not write to config file $copy_cfg_file: $!");
+      $failed_write_cfg= 1;
+    }
+    close TEMPL;
 }
 else
 {
-  warning($opt,"Could not write to config file $copy_cfg_file: $!");
-  $failed_write_cfg= 1;
+    warning($opt, sprintf("Cannot find file: %s", "my-default.cnf"));
 }
-close TEMPL;
 
 # ----------------------------------------------------------------------
 # Now we can get arguments from the groups [mysqld] and [mysql_install_db]
